// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`compile > directives > v-memo > nested v-memo on normal element 1`] = `
"import { template as _template, children as _children, createTextNode as _createTextNode, setText as _setText, prepend as _prepend, watch as _watch, withMemo as _withMemo } from 'vue/vapor';

export function render(_ctx) {
  const t0 = _template(\\"<div><div></div></div>\\")
  const n0 = t0()
  const { 0: [n3, { 0: [n2],}],} = _children(n0)
  const n1 = _createTextNode(foo)
  _setText(n1, undefined, foo)
  _setText(n2, undefined, foo3)
  _prepend(n3, n1)
  _watch([foo, foo2], (newValues, oldValues) => {
    _setText(n1, undefined, foo)
  })
  _watch([foo, foo2, foo3, foo4], (newValues, oldValues) => {
    if(!_withMemo([foo3, foo4].length, newValues, oldValues)) return
    _setText(n2, undefined, foo3)
  })
  return n0
}"
`;
